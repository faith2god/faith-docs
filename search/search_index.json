{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"blog/","title":"Blog","text":""},{"location":"monitoring/k8s-metrics/","title":"k8s-metrics","text":"","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#k8s","title":"K8S\u76d1\u63a7\u6307\u6807","text":"","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kube-state-metrics","title":"kube-state-metrics","text":"<p>\u5b98\u65b9\u6587\u6863 https://github.com/kubernetes/kube-state-metrics/blob/main/docs/README.md</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#pod-metrics","title":"pod-metrics","text":"Metric name Metric type Description Unit (where applicable) Labels/tags Status Opt-in kube_pod_annotations Gauge Kubernetes annotations converted to Prometheus labels controlled via --metric-annotations-allowlist <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>annotation_POD_ANNOTATION</code>=&lt;POD_ANNOTATION&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_info Gauge Information about pod <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>host_ip</code>=&lt;host-ip&gt;  <code>pod_ip</code>=&lt;pod-ip&gt;  <code>node</code>=&lt;node-name&gt; <code>created_by_kind</code>=&lt;created_by_kind&gt; <code>created_by_name</code>=&lt;created_by_name&gt; <code>uid</code>=&lt;pod-uid&gt; <code>priority_class</code>=&lt;priority_class&gt; <code>host_network</code>=&lt;host_network&gt; STABLE - kube_pod_ips Gauge Pod IP addresses <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>ip</code>=&lt;pod-ip-address&gt;  <code>ip_family</code>=&lt;4 OR 6&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_start_time Gauge Start time in unix timestamp for a pod seconds <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_completion_time Gauge Completion time in unix timestamp for a pod seconds <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_owner Gauge Information about the Pod's owner <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>owner_kind</code>=&lt;owner kind&gt;  <code>owner_name</code>=&lt;owner name&gt;  <code>owner_is_controller</code>=&lt;whether owner is controller&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_labels Gauge Kubernetes labels converted to Prometheus labels controlled via --metric-labels-allowlist <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>label_POD_LABEL</code>=&lt;POD_LABEL&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_nodeselectors Gauge Describes the Pod nodeSelectors <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>nodeselector_NODE_SELECTOR</code>=&lt;NODE_SELECTOR&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL Opt-in kube_pod_status_phase Gauge The pods current phase <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>phase</code>=&lt;Pending|Running|Succeeded|Failed|Unknown&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_status_qos_class Gauge The pods current qosClass <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>qos_class</code>=&lt;BestEffort|Burstable|Guaranteed&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_status_ready Gauge Describes whether the pod is ready to serve requests <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>condition</code>=&lt;true|false|unknown&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_status_scheduled Gauge Describes the status of the scheduling process for the pod <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>condition</code>=&lt;true|false|unknown&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_container_info Gauge Information about a container in a pod <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>image</code>=&lt;image-name&gt;  <code>image_id</code>=&lt;image-id&gt;  <code>image_spec</code>=&lt;image-spec&gt;  <code>container_id</code>=&lt;containerid&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_container_status_waiting Gauge Describes whether the container is currently in waiting state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_container_status_waiting_reason Gauge Describes the reason the container is currently in waiting state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>reason</code>=&lt;container-waiting-reason&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_container_status_running Gauge Describes whether the container is currently in running state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_container_state_started Gauge Start time in unix timestamp for a pod container seconds <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_container_status_terminated Gauge Describes whether the container is currently in terminated state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_container_status_terminated_reason Gauge Describes the reason the container is currently in terminated state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>reason</code>=&lt;container-terminated-reason&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_container_status_last_terminated_reason Gauge Describes the last reason the container was in terminated state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>reason</code>=&lt;last-terminated-reason&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_container_status_last_terminated_exitcode Gauge Describes the exit code for the last container in terminated state. <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_container_status_ready Gauge Describes whether the containers readiness check succeeded <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_status_initialized_time Gauge Time when the pod is initialized. seconds <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL kube_pod_status_ready_time Gauge Time when pod passed readiness probes. seconds <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL kube_pod_status_container_ready_time Gauge Time when the container of the pod entered Ready state. seconds <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL kube_pod_container_status_restarts_total Counter The number of container restarts per container <code>container</code>=&lt;container-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_container_resource_requests Gauge The number of requested request resource by a container. It is recommended to use the <code>kube_pod_resource_requests</code> metric exposed by kube-scheduler instead, as it is more precise. <code>cpu</code>=&lt;core&gt;  <code>memory</code>=&lt;bytes&gt; <code>resource</code>=&lt;resource-name&gt;  <code>unit</code>=&lt;resource-unit&gt;  <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>node</code>=&lt; node-name&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_container_resource_limits Gauge The number of requested limit resource by a container. It is recommended to use the <code>kube_pod_resource_limits</code> metric exposed by kube-scheduler instead, as it is more precise. <code>cpu</code>=&lt;core&gt;  <code>memory</code>=&lt;bytes&gt; <code>resource</code>=&lt;resource-name&gt;  <code>unit</code>=&lt;resource-unit&gt;  <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>node</code>=&lt; node-name&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_overhead_cpu_cores Gauge The pod overhead in regards to cpu cores associated with running a pod core <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_overhead_memory_bytes Gauge The pod overhead in regards to memory associated with running a pod bytes <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_runtimeclass_name_info Gauge The runtimeclass associated with the pod <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_created Gauge Unix creation timestamp seconds <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_deletion_timestamp Gauge Unix deletion timestamp seconds <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_restart_policy Gauge Describes the restart policy in use by this pod <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>type</code>=&lt;Always|Never|OnFailure&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_init_container_info Gauge Information about an init container in a pod <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>image</code>=&lt;image-name&gt;  <code>image_id</code>=&lt;image-id&gt;  <code>image_spec</code>=&lt;image-spec&gt;  <code>container_id</code>=&lt;containerid&gt;  <code>uid</code>=&lt;pod-uid&gt;  <code>restart_policy</code>=&lt;restart-policy&gt; STABLE - kube_pod_init_container_status_waiting Gauge Describes whether the init container is currently in waiting state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_init_container_status_waiting_reason Gauge Describes the reason the init container is currently in waiting state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>reason</code>=&lt;container-waiting-reason&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_init_container_status_running Gauge Describes whether the init container is currently in running state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_init_container_status_terminated Gauge Describes whether the init container is currently in terminated state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_init_container_status_terminated_reason Gauge Describes the reason the init container is currently in terminated state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>reason</code>=&lt;container-terminated-reason&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_init_container_status_last_terminated_reason Gauge Describes the last reason the init container was in terminated state <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>reason</code>=&lt;last-terminated-reason&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_init_container_status_ready Gauge Describes whether the init containers readiness check succeeded <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_init_container_status_restarts_total Counter The number of restarts for the init container integer <code>container</code>=&lt;container-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_init_container_resource_limits Gauge The number of CPU cores requested limit by an init container <code>cpu</code>=&lt;core&gt;  <code>memory</code>=&lt;bytes&gt; <code>resource</code>=&lt;resource-name&gt;  <code>unit</code>=&lt;resource-unit&gt;  <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>node</code>=&lt; node-name&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_init_container_resource_requests Gauge The number of CPU cores requested by an init container <code>cpu</code>=&lt;core&gt;  <code>memory</code>=&lt;bytes&gt; <code>resource</code>=&lt;resource-name&gt;  <code>unit</code>=&lt;resource-unit&gt;  <code>container</code>=&lt;container-name&gt;  <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>node</code>=&lt; node-name&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_spec_volumes_persistentvolumeclaims_info Gauge Information about persistentvolumeclaim volumes in a pod <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>volume</code>=&lt;volume-name&gt;   <code>persistentvolumeclaim</code>=&lt;persistentvolumeclaim-claimname&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_spec_volumes_persistentvolumeclaims_readonly Gauge Describes whether a persistentvolumeclaim is mounted read only bool <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;   <code>volume</code>=&lt;volume-name&gt;   <code>persistentvolumeclaim</code>=&lt;persistentvolumeclaim-claimname&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_status_reason Gauge The pod status reasons <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>reason</code>=&lt;Evicted|NodeAffinity|NodeLost|Shutdown|UnexpectedAdmissionError&gt;  <code>uid</code>=&lt;pod-uid&gt; EXPERIMENTAL - kube_pod_status_scheduled_time Gauge Unix timestamp when pod moved into scheduled status seconds <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_status_unschedulable Gauge Describes the unschedulable status for the pod <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt; STABLE - kube_pod_tolerations Gauge Information about the pod tolerations <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt;  <code>key</code>=&lt;toleration-key&gt;  <code>operator</code>=&lt;toleration-operator&gt;  <code>value</code>=&lt;toleration-value&gt;  <code>effect</code>=&lt;toleration-effect&gt; <code>toleration_seconds</code>=&lt;toleration-seconds&gt; EXPERIMENTAL - kube_pod_service_account Gauge The service account for a pod <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt;  <code>service_account</code>=&lt;service_account&gt; EXPERIMENTAL - kube_pod_scheduler Gauge The scheduler for a pod <code>pod</code>=&lt;pod-name&gt;  <code>namespace</code>=&lt;pod-namespace&gt;  <code>uid</code>=&lt;pod-uid&gt;  <code>name</code>=&lt;scheduler-name&gt; EXPERIMENTAL -","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#_1","title":"\u4f7f\u7528\u573a\u666f","text":"<ul> <li>\u83b7\u53d6pod\u5728 <code>Unknown</code>\u72b6\u6001 <pre><code>sum(kube_pod_status_phase{phase=\"Unknown\"}) by (namespace, pod) or (count(kube_pod_deletion_timestamp) by (namespace, pod) * sum(kube_pod_status_reason{reason=\"NodeLost\"}) by(namespace, pod)) &gt; 0\n</code></pre></li> <li>\u83b7\u53d6pod\u5728 <code>Terminating</code>\u72b6\u6001 <pre><code>count(kube_pod_deletion_timestamp) by (namespace, pod) * count(kube_pod_status_reason{reason=\"NodeLost\"} == 0) by (namespace, pod) &gt; 0\n</code></pre></li> </ul>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#deployment-metrics","title":"deployment-metrics","text":"","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#cadvisor","title":"cAdvisor","text":"<p>\u5b98\u7f51\uff1ahttps://github.com/google/cadvisor/blob/master/docs/storage/prometheus.md#prometheus-container-metrics</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#k8s_1","title":"K8S\u76d1\u63a7\u8bed\u53e5","text":"","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#k8s_2","title":"k8s\u8d1f\u8f7d","text":"","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubepodcrashlooping","title":"KubePodCrashLooping","text":"<p><pre><code>rate(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\"}[5m]) * 60 * 5 &gt; 0\n</code></pre> \u6216\u8005 <pre><code>changes(kube_pod_container_status_restarts_total[5m])&gt; 0\n</code></pre> \u62a5\u8b66\u4fe1\u606f</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/Pod {{ $labels.pod }}/\u5bb9\u5668 {{ $labels.container}} \u6700\u8fd15\u5206\u949f\u91cd\u542f{{ printf \"%.2f\" $value }}\u6b21</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubepodnotready","title":"KubePodNotReady","text":"<p><pre><code>sum by (cluster,namespace, pod) (\n  max by(cluster,namespace, pod) (\n    kube_pod_status_phase{job=\"kube-state-metrics\", phase=~\"Pending|Unknown\"}\n  ) * on(cluster,namespace, pod) group_left(owner_kind) topk by(cluster,namespace, pod) (\n    1, max by(cluster,namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"})\n  )\n) &gt; 0\n</code></pre> \u5728Kubernetes\u73af\u5883\u4e2d\u68c0\u67e5\u662f\u5426\u5b58\u5728\u5904\u4e8e\"Pending\"\u6216\"Unknown\"\u72b6\u6001\u7684Pod\uff0c\u4e14\u8fd9\u4e9bPod\u7684\u6240\u6709\u8005\uff08owner\uff09\u4e0d\u662f\"Job\"\u3002</p> <ul> <li>sum by (cluster, namespace, pod): \u9996\u5148\u5bf9\u67e5\u8be2\u7ed3\u679c\u8fdb\u884c\u805a\u5408\uff0c\u6309\u7167cluster\u3001namespace\u548cpod\u8fd9\u4e09\u4e2a\u6807\u7b7e\u8fdb\u884c\u5206\u7ec4\u3002</li> <li>max by(cluster, namespace, pod): \u5728\u5185\u90e8\uff0c\u5bf9\u4e8e\u6bcf\u4e2acluster\u3001namespace\u548cpod\u7684\u7ec4\u5408\uff0c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684Pod\u4e2d\u6700\u5927\u7684\u503c\u3002</li> <li>\u8fd9\u91cc\u4f7f\u7528\u7684\u662fkube_pod_status_phase{job=\"kube-state-metrics\", phase=~\"Pending|Unknown\"}\u67e5\u8be2\uff0c\u5b83\u4f1a\u8fd4\u56de\u5904\u4e8e\"Pending\"\u6216\"Unknown\"\u72b6\u6001\u7684Pod\u3002</li> <li>on(cluster, namespace, pod) group_left(owner_kind): \u4f7f\u7528on\u5173\u952e\u5b57\u6307\u5b9a\u4e86\u9700\u8981\u4e0e\u524d\u9762\u7684\u7ed3\u679c\u8fdb\u884c\u5173\u8054\u7684\u6807\u7b7e\uff0c\u8fd9\u91cc\u662fcluster\u3001namespace\u548cpod\u3002</li> <li>group_left\u786e\u4fdd\u4fdd\u7559\u5de6\u4fa7\u67e5\u8be2\uff08\u5373\u524d\u9762\u7684\u67e5\u8be2\uff09\u4e2d\u7684\u6807\u7b7e\uff0c\u5e76\u4e0e\u53f3\u4fa7\u67e5\u8be2\uff08\u5373\u540e\u9762\u7684\u67e5\u8be2\uff09\u8fdb\u884c\u5173\u8054\u3002</li> <li>topk by(cluster, namespace, pod):\u5bf9\u4e8e\u6bcf\u4e2acluster\u3001namespace\u548cpod\u7684\u7ec4\u5408\uff0c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684Pod\u7684\u6240\u6709\u8005\uff0c\u5e76\u53ea\u9009\u62e9\u4e00\u4e2a\u3002 topk\u51fd\u6570\u7528\u4e8e\u9009\u62e9\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u9876\u90e8\u7684\u8bb0\u5f55\u3002\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u524d\u4e00\u4e2a\u67e5\u8be2\u4e2d\u7684Pod\u7684\u6240\u6709\u8005\u3002</li> <li>1, max by(cluster, namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"}): \u8fd9\u662f\u4e00\u4e2a\u5b50\u67e5\u8be2\uff0c\u5b83\u67e5\u627e\u6ee1\u8db3\u6761\u4ef6\u7684Pod\u7684\u6240\u6709\u8005\uff0c\u5e76\u786e\u4fdd\u8fd9\u4e9b\u6240\u6709\u8005\u4e0d\u662f\"Job\"\u3002 \u4f7f\u7528max by\u786e\u4fdd\u5bf9\u4e8e\u6bcf\u4e2acluster\u3001namespace\u3001pod\u548cowner_kind\u7684\u7ec4\u5408\uff0c\u627e\u5230\u6700\u5927\u7684\u503c\uff08\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u662f\u67e5\u627e\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\uff09\u3002</li> <li><code>&gt; 0</code>: \u6700\u540e\uff0c\u4e3b\u67e5\u8be2\u786e\u4fdd\u7ed3\u679c\u5927\u4e8e0\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u627e\u5230\u4efb\u4f55\u6ee1\u8db3\u6761\u4ef6\u7684Pod\uff0c\u4e14\u5b83\u7684\u6240\u6709\u8005\u4e0d\u662f\"Job\"\uff0c\u5219\u7ed3\u679c\u4e3a\u771f\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u6bb5\u67e5\u8be2\u8bed\u53e5\u7528\u4e8e\u68c0\u67e5Kubernetes\u96c6\u7fa4\u4e2d\u662f\u5426\u5b58\u5728\u5904\u4e8e\"Pending\"\u6216\"Unknown\"\u72b6\u6001\u7684Pod\uff0c\u5e76\u4e14\u8fd9\u4e9bPod\u7684\u6240\u6709\u8005\u4e0d\u662f\"Job\"\u3002\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684Pod\uff0c\u67e5\u8be2\u7ed3\u679c\u5c06\u4e3a\u771f\u3002</li> </ul> <p>\u62a5\u8b66\u4fe1\u606f</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/Pod {{ $labels.pod }}\u5904\u4e8eNotReady\u72b6\u6001\u8d85\u8fc715\u5206\u949f</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubedeploymentgenerationmismatch","title":"KubeDeploymentGenerationMismatch","text":"<p>\u51fa\u73b0\u90e8\u7f72\u7248\u672c\u4e0d\u5339\u914d <pre><code>kube_deployment_status_observed_generation{job=\"kube-state-metrics\"}\n  !=\nkube_deployment_metadata_generation{job=\"kube-state-metrics\"}\n</code></pre> \u544a\u8b66\u4fe1\u606f</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/deployment {{ $labels.deployment}}\u90e8\u7f72\u7248\u672c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u8868\u793aDeployment\u53d8\u66f4\u6ca1\u6709\u751f\u6548</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubedeploymentreplicasmismatch","title":"KubeDeploymentReplicasMismatch","text":"<p>\u51fa\u73b0\u90e8\u7f72\u526f\u672c\u4e0d\u5339\u914d\u3002 <pre><code>(\n  kube_deployment_spec_replicas{job=\"kube-state-metrics\"}\n    !=\n  kube_deployment_status_replicas_available{job=\"kube-state-metrics\"}\n) and (\n  changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\"}[5m])\n    ==\n  0\n)\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/deployment {{ $labels.deployment }} \u6ca1\u6709\u8fbe\u5230\u9884\u671f\u526f\u672c\u6570\u8d85\u8fc75\u5206\u949f</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubestatefulsetreplicasmismatch","title":"KubeStatefulSetReplicasMismatch","text":"<p>\u72b6\u6001\u96c6\u526f\u672c\u4e0d\u5339\u914d\u3002 <pre><code>(\n  kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\"}\n    !=\n  kube_statefulset_status_replicas{job=\"kube-state-metrics\"}\n) and (\n  changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}[5m])\n    ==\n  0\n)\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/statefulset {{ $labels.statefulset }} \u6ca1\u6709\u8fbe\u5230\u9884\u671f\u526f\u672c\u6570\u8d85\u8fc75\u5206\u949f</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubestatefulsetgenerationmismatch","title":"KubeStatefulSetGenerationMismatch","text":"<p>\u72b6\u6001\u96c6\u7248\u672c\u4e0d\u5339\u914d\u3002 <pre><code>kube_statefulset_status_observed_generation{job=\"kube-state-metrics\"}\n  !=\nkube_statefulset_metadata_generation{job=\"kube-state-metrics\"}\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/statefulset {{ $labels.statefulset}} \u90e8\u7f72\u7248\u672c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u8868\u793astatefulset\u53d8\u66f4\u6ca1\u6709\u751f\u6548</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubestatefulsetupdatenotrolledout","title":"KubeStatefulSetUpdateNotRolledOut","text":"<p>\u72b6\u6001\u96c6\u66f4\u65b0\u672a\u9000\u51fa\u3002 <pre><code>(\n  max without (revision) (\n    kube_statefulset_status_current_revision{job=\"kube-state-metrics\"}\n      unless\n    kube_statefulset_status_update_revision{job=\"kube-state-metrics\"}\n  )\n    *\n  (\n    kube_statefulset_replicas{job=\"kube-state-metrics\"}\n      !=\n    kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}\n  )\n)  and (\n  changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\"}[5m])\n    ==\n  0\n)\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/statefulset {{ $labels.statefulset }} \u90e8\u5206Pod\u672a\u66f4\u65b0</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubedaemonsetrolloutstuck","title":"KubeDaemonSetRolloutStuck","text":"<p>DaemonSet\u9000\u51fa\u56de\u9000\u3002 <pre><code>(\n  (\n    kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\"}\n     !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  ) or (\n    kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\"}\n     !=\n    0\n  ) or (\n    kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\"}\n     !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  ) or (\n    kube_daemonset_status_number_available{job=\"kube-state-metrics\"}\n     !=\n    kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  )\n) and (\n  changes(kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\"}[5m])\n    ==\n  0\n)\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/daemonset {{ $labels.daemonset }} \u53d8\u66f4\u5361\u4e86\u8d85\u8fc75\u5206\u949f</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubecontainerwaiting","title":"KubeContainerWaiting","text":"<p>\u5bb9\u5668\u7b49\u5f85\u3002 <pre><code>sum by (namespace, pod, container,cluster) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\"}) &gt; 0\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/pod {{ $labels.pod }}/container {{ $labels.container}} \u5904\u4e8eWaiting\u72b6\u6001\u8d85\u8fc710\u5206\u949f</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubedaemonsetnotscheduled","title":"KubeDaemonSetNotScheduled","text":"<p>DaemonSet\u65e0\u8ba1\u5212 <pre><code>kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\"}\n  -\nkube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\"} &gt; 0\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/ namespace {{ $labels.namespace }}/daemonset {{ $labels.daemonset}}  \u4e2d {{ $value }} \u4e2a pod \u6ca1\u6709\u88ab\u8c03\u5ea6</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubedaemonsetmisscheduled","title":"KubeDaemonSetMisScheduled","text":"<p>Daemon\u7f3a\u5931\u8ba1\u5212 <pre><code>kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\"} &gt; 0\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/daemonset {{ $labels.daemonset}} \u4e2d {{ $value }} \u4e2a pod \u9519\u8bef\u8c03\u5ea6\u5230node\u4e0a</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubejobcompletion","title":"KubeJobCompletion","text":"<p>\u4efb\u52a1\u5b8c\u6210 <pre><code>kube_job_spec_completions{job=\"kube-state-metrics\"} - kube_job_status_succeeded{job=\"kube-state-metrics\"}  &gt; 0\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/job {{ $labels.job_name }} \u4efb\u52a1\u5b8c\u6210</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubejobfailed","title":"KubeJobFailed","text":"<p>\u4efb\u52a1\u5931\u8d25 <pre><code>kube_job_status_failed{job=\"kube-state-metrics\"} &gt; 0\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/job {{ $labels.job_name }} \u6267\u884c\u5931\u8d25</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubehpareplicasmismatch","title":"KubeHpaReplicasMismatch","text":"<p>HPA\u526f\u672c\u4e0d\u5339\u914d <pre><code>(kube_hpa_status_desired_replicas{job=\"kube-state-metrics\"}\n  !=\nkube_hpa_status_current_replicas{job=\"kube-state-metrics\"})\n  and\nchanges(kube_hpa_status_current_replicas[10m]) == 0\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/HPA {{ $labels.hpa }} \u526f\u672c\u6570\u548c\u9884\u671f\u4e0d\u4e00\u81f4\u8d85\u8fc710\u5206\u949f</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubehpamaxedout","title":"KubeHpaMaxedOut","text":"<p>HPA\u526f\u672c\u8d85\u8fc7\u6700\u5927\u503c <pre><code>kube_hpa_status_current_replicas{job=\"kube-state-metrics\"}\n  ==\nkube_hpa_spec_max_replicas{job=\"kube-state-metrics\"}\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4 {{ $labels.cluster }}/namespace {{ $labels.namespace }}/HPA {{ $labels.hpa }} \u526f\u672c\u6570\u8fbe\u5230\u6700\u5927\u503c\u8d85\u8fc75m</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#k8s_3","title":"k8s\u8d44\u6e90","text":"","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubecpuovercommit","title":"KubeCPUOvercommit","text":"<p>CPU\u8fc7\u8f7d <pre><code>sum(kube_pod_container_resource_requests_cpu_cores) by (cluster) /sum(kube_node_status_allocatable_cpu_cores) by (cluster)  &gt;\n(count(kube_node_status_allocatable_cpu_cores) by (cluster) -1)   / count(kube_node_status_allocatable_cpu_cores) by (cluster) \n</code></pre></p> <p>\u65b0\u7248\u672c\u7684Kube_state_metric\u8bed\u53e5 <pre><code>sum(kube_pod_container_resource_requests{resource=\"cpu\"}) by (cluster)  \n  /\nsum(kube_node_status_allocatable{resource=\"cpu\"})\n by (cluster)  &gt;\n(count(kube_node_status_allocatable{resource=\"cpu\"}) by (cluster) -1)   / count(kube_node_status_allocatable{resource=\"cpu\"}) by (cluster) \n</code></pre></p> <p>\u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}\u5185Pod\u7533\u8bf7\u7684CPU\u8fc7\u8f7d\uff0c\u5f53\u524dCPU\u7533\u8bf7\u5360\u6bd4{{ $value | humanizePercentage }}</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubememoryovercommit","title":"KubeMemoryOvercommit","text":"<p>\u5185\u5b58\u8fc7\u8f7d <pre><code>sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum{}) by (cluster)  \n  /\nsum(kube_node_status_allocatable_memory_bytes) by (cluster)  \n  &gt;\n(count(kube_node_status_allocatable_memory_bytes) by (cluster)-1)  \n  /\ncount(kube_node_status_allocatable_memory_bytes) by (cluster)  \n</code></pre></p> <p>\u65b0\u7248\u672c\u7684Kube_state_metric\u8bed\u53e5 sum(kube_pod_container_resource_requests{resource=\"memory\"}) by (cluster)   / sum(kube_node_status_allocatable{resource=\"memory\"}) by (cluster)  </p> <p>(count(kube_node_status_allocatable{resource=\"memory\"}) by (cluster)-1)   / count(kube_node_status_allocatable{resource=\"memory\"}) by (cluster)  </p> <p>\u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}\u5185Pod\u7533\u8bf7\u7684\u5185\u5b58\u8fc7\u8f7d\uff0c\u5f53\u524dCPU\u7533\u8bf7\u5360\u6bd4{{ $value | humanizePercentage }}</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubecpuquotaovercommit","title":"KubeCPUQuotaOvercommit","text":"<p>CPU\u989d\u5ea6\u8fc7\u8f7d\uff08kube_resourcequota\u4e0d\u5b58\u5728\uff0c\u4eceresourcequota-metrics\u4e2d \u91c7\u96c6\uff09 <pre><code>sum(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=\"cpu\"})  by (cluster)  \n  /\nsum(kube_node_status_allocatable_cpu_cores) by (cluster)  \n  &gt; 1.5\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}CPU Quota\u8fc7\u8f7d\uff0c\u5df2\u7ecf\u8d85\u8fc7\u53ef\u5206\u914dCPU\u8d44\u6e90\u7684{{ $value }}\u500d</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubememoryquotaovercommit","title":"KubeMemoryQuotaOvercommit","text":"<p>\u5185\u5b58\u989d\u5ea6\u8fc7\u8f7d\uff08kube_resourcequota\u4e0d\u5b58\u5728\uff0c\u4eceresourcequota-metrics\u4e2d \u91c7\u96c6\uff09 <pre><code>sum(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\", resource=\"memory\"}) by (cluster)  \n  /\nsum(kube_node_status_allocatable_memory_bytes{job=\"node-exporter\"}) by (cluster)   \n  &gt; 1.5\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}\u5185\u5b58\u914d\u989d\u8fc7\u8f7d\uff0c\u5df2\u7ecf\u8d85\u8fc7\u53ef\u5206\u914d\u5185\u5b58\u8d44\u6e90\u7684{{ $value }}\u500d</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubequotaalmostfull","title":"KubeQuotaAlmostFull","text":"<p>\u914d\u989d\u5feb\u8d85\u8fc7\u9650\u5236\u4e86 <pre><code>kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} &gt; 0)\n  &gt; 0.7 \n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}/namespace {{ $labels.namespace }}\u4e2d\u8d44\u6e90{{ $labels.resource }}\u4f7f\u7528\u7387\u8d85\u8fc7{{ $value | humanizePercentage }}</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#kubequotaexceeded","title":"KubeQuotaExceeded","text":"<p>\u914d\u989d\u8d85\u9650\u5236\u4e86 <pre><code>kube_resourcequota{job=\"kube-state-metrics\", type=\"used\"}\n  / ignoring(instance, job, type)\n(kube_resourcequota{job=\"kube-state-metrics\", type=\"hard\"} &gt; 0)\n  &gt; 1\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}/namespace {{ $labels.namespace }}\u4e2d\u8d44\u6e90{{ $labels.resource }}\u4f7f\u7528\u7387\u8d85\u8fc7{{ $value | humanizePercentage }}</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#runningpodnamespacepodnode","title":"\u67e5\u8be2\u5904\u5728RUNNING\u72b6\u6001\u7684pod\u7684\u5185\u5b58\u8bf7\u6c42\u91cf\u603b\u548c\uff0c\u6309\u7167namespace\u3001pod\u548cnode\u8fdb\u884c\u5206\u7ec4","text":"<p><pre><code>sum(kube_pod_container_resource_requests{resource=\"memory\"}) by (namespace, pod, node)\n  * on (namespace, pod) group_left() (sum(kube_pod_status_phase{phase=\"Running\"}) by (pod, namespace) == 1)\n</code></pre> - sum(kube_pod_container_resource_requests{resource=\"memory\"}) by (namespace, pod, node): \u8fd9\u90e8\u5206\u67e5\u8be2\u662f\u5bf9\u6bcf\u4e2a\u547d\u540d\u7a7a\u95f4\uff08namespace\uff09\u3001Pod\u548c\u8282\u70b9\uff08node\uff09\u7684\u5185\u5b58\u8bf7\u6c42\u8fdb\u884c\u6c42\u548c\u3002 - kube_pod_container_resource_requests{resource=\"memory\"}\u8fd9\u90e8\u5206\u662f\u4ecekube-state-metrics\u83b7\u53d6\u7684\uff0c\u5b83\u4f1a\u8fd4\u56de\u6bcf\u4e2aPod\u5bb9\u5668\u7684\u5185\u5b58\u8bf7\u6c42\u3002 - on (namespace, pod) group_left(): \u4f7f\u7528on\u5173\u952e\u5b57\u6307\u5b9a\u4e86\u9700\u8981\u4e0e\u524d\u9762\u7684\u7ed3\u679c\u8fdb\u884c\u5173\u8054\u7684\u6807\u7b7e\uff0c\u8fd9\u91cc\u662fnamespace\u548cpod\u3002 group_left()\u786e\u4fdd\u4fdd\u7559\u5de6\u4fa7\u67e5\u8be2\u4e2d\u7684\u6807\u7b7e\uff0c\u5e76\u4e0e\u53f3\u4fa7\u67e5\u8be2\u8fdb\u884c\u5173\u8054\uff0c\u4f46\u5728\u6b64\u4f8b\u4e2d\uff0c\u53f3\u4fa7\u67e5\u8be2\u4e0d\u9700\u8981\u989d\u5916\u7684\u6807\u7b7e\u3002 - (sum(kube_pod_status_phase{phase=\"Running\"}) by (pod, namespace) == 1): \u8fd9\u662f\u4e00\u4e2a\u5b50\u67e5\u8be2\uff0c\u5b83\u68c0\u67e5\u6bcf\u4e2aPod\u662f\u5426\u5904\u4e8e\"Running\"\u72b6\u6001\u3002 \u4f7f\u7528sum\u5bf9\u6bcf\u4e2aPod\u548c\u547d\u540d\u7a7a\u95f4\u7684\"Running\"\u72b6\u6001\u8fdb\u884c\u6c42\u548c\u3002\u7531\u4e8ePod\u7684\u72b6\u6001\u53ea\u80fd\u662f0\u62161\uff0c\u6240\u4ee5\u8fd9\u4e2a\u6c42\u548c\u7684\u7ed3\u679c\u8981\u4e48\u662f0\uff08\u8868\u793a\u6ca1\u6709Pod\u5904\u4e8e\"Running\"\u72b6\u6001\uff09\uff0c\u8981\u4e48\u662f1\uff08\u8868\u793a\u6709\u4e00\u4e2aPod\u5904\u4e8e\"Running\"\u72b6\u6001\uff09\u3002 - == 1\u786e\u4fdd\u53ea\u9009\u62e9\u5904\u4e8e\"Running\"\u72b6\u6001\u7684Pod\u3002 - \u6700\u7ec8\uff0c\u4e24\u4e2a\u67e5\u8be2\u7ed3\u679c\u7684\u4e58\u79ef\uff1a\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5e0c\u671b\u67e5\u627e\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\u7684Pod\uff1a\u4e00\u662f\u5b83\u4eec\u8bf7\u6c42\u4e86\u5185\u5b58\u8d44\u6e90\uff0c\u4e8c\u662f\u5b83\u4eec\u5904\u4e8e\"Running\"\u72b6\u6001\u3002</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#cadvisor_1","title":"CAdvisor","text":"<p>\u5b98\u7f51\u6587\u6863\uff1ahttps://github.com/google/cadvisor/blob/master/docs/storage/prometheus.md</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#prometheus-container-metrics","title":"Prometheus container metrics","text":"<p>The table below lists the Prometheus container metrics exposed by cAdvisor (in alphabetical order by metric name) and corresponding <code>-disable_metrics</code> / <code>-enable_metrics</code> option parameter:</p> Metric name Type Description Unit (where applicable) option parameter additional build flag <code>container_blkio_device_usage_total</code> Counter Blkio device bytes usage bytes diskIO <code>container_cpu_cfs_periods_total</code> Counter Number of elapsed enforcement period intervals cpu <code>container_cpu_cfs_throttled_periods_total</code> Counter Number of throttled period intervals cpu <code>container_cpu_cfs_throttled_seconds_total</code> Counter Total time duration the container has been throttled seconds cpu <code>container_cpu_load_average_10s</code> Gauge Value of container cpu load average over the last 10 seconds cpuLoad <code>container_cpu_schedstat_run_periods_total</code> Counter Number of times processes of the cgroup have run on the cpu sched <code>container_cpu_schedstat_runqueue_seconds_total</code> Counter Time duration processes of the container have been waiting on a runqueue seconds sched <code>container_cpu_schedstat_run_seconds_total</code> Counter Time duration the processes of the container have run on the CPU seconds sched <code>container_cpu_system_seconds_total</code> Counter Cumulative system cpu time consumed seconds cpu <code>container_cpu_usage_seconds_total</code> Counter Cumulative cpu time consumed seconds cpu <code>container_cpu_user_seconds_total</code> Counter Cumulative user cpu time consumed seconds cpu <code>container_file_descriptors</code> Gauge Number of open file descriptors for the container process <code>container_fs_inodes_free</code> Gauge Number of available Inodes disk <code>container_fs_inodes_total</code> Gauge Total number of Inodes disk <code>container_fs_io_current</code> Gauge Number of I/Os currently in progress diskIO <code>container_fs_io_time_seconds_total</code> Counter Cumulative count of seconds spent doing I/Os seconds diskIO <code>container_fs_io_time_weighted_seconds_total</code> Counter Cumulative weighted I/O time seconds diskIO <code>container_fs_limit_bytes</code> Gauge Number of bytes that can be consumed by the container on this filesystem bytes disk <code>container_fs_reads_bytes_total</code> Counter Cumulative count of bytes read bytes diskIO <code>container_fs_read_seconds_total</code> Counter Cumulative count of seconds spent reading diskIO <code>container_fs_reads_merged_total</code> Counter Cumulative count of reads merged diskIO <code>container_fs_reads_total</code> Counter Cumulative count of reads completed diskIO <code>container_fs_sector_reads_total</code> Counter Cumulative count of sector reads completed diskIO <code>container_fs_sector_writes_total</code> Counter Cumulative count of sector writes completed diskIO <code>container_fs_usage_bytes</code> Gauge Number of bytes that are consumed by the container on this filesystem bytes disk <code>container_fs_writes_bytes_total</code> Counter Cumulative count of bytes written bytes diskIO <code>container_fs_write_seconds_total</code> Counter Cumulative count of seconds spent writing seconds diskIO <code>container_fs_writes_merged_total</code> Counter Cumulative count of writes merged diskIO <code>container_fs_writes_total</code> Counter Cumulative count of writes completed diskIO <code>container_hugetlb_failcnt</code> Counter Number of hugepage usage hits limits hugetlb <code>container_hugetlb_max_usage_bytes</code> Gauge Maximum hugepage usages recorded bytes hugetlb <code>container_hugetlb_usage_bytes</code> Gauge Current hugepage usage bytes hugetlb <code>container_last_seen</code> Gauge Last time a container was seen by the exporter timestamp - <code>container_llc_occupancy_bytes</code> Gauge Last level cache usage statistics for container counted with RDT Memory Bandwidth Monitoring (MBM). bytes resctrl <code>container_memory_bandwidth_bytes</code> Gauge Total memory bandwidth usage statistics for container counted with RDT Memory Bandwidth Monitoring (MBM). bytes resctrl <code>container_memory_bandwidth_local_bytes</code> Gauge Local memory bandwidth usage statistics for container counted with RDT Memory Bandwidth Monitoring (MBM). bytes resctrl <code>container_memory_cache</code> Gauge Total page cache memory bytes memory <code>container_memory_failcnt</code> Counter Number of memory usage hits limits memory <code>container_memory_failures_total</code> Counter Cumulative count of memory allocation failures memory <code>container_memory_mapped_file</code> Gauge Size of memory mapped files bytes memory <code>container_memory_max_usage_bytes</code> Gauge Maximum memory usage recorded bytes memory <code>container_memory_migrate</code> Gauge Memory migrate status cpuset <code>container_memory_numa_pages</code> Gauge Number of used pages per NUMA node memory_numa <code>container_memory_rss</code> Gauge Size of RSS bytes memory <code>container_memory_swap</code> Gauge Container swap usage bytes memory <code>container_memory_usage_bytes</code> Gauge Current memory usage, including all memory regardless of when it was accessed bytes memory <code>container_memory_working_set_bytes</code> Gauge Current working set bytes memory <code>container_network_advance_tcp_stats_total</code> Gauge advanced tcp connections statistic for container advtcp <code>container_network_receive_bytes_total</code> Counter Cumulative count of bytes received bytes network <code>container_network_receive_errors_total</code> Counter Cumulative count of errors encountered while receiving network <code>container_network_receive_packets_dropped_total</code> Counter Cumulative count of packets dropped while receiving network <code>container_network_receive_packets_total</code> Counter Cumulative count of packets received network <code>container_network_tcp6_usage_total</code> Gauge tcp6 connection usage statistic for container tcp <code>container_network_tcp_usage_total</code> Gauge tcp connection usage statistic for container tcp <code>container_network_transmit_bytes_total</code> Counter Cumulative count of bytes transmitted bytes network <code>container_network_transmit_errors_total</code> Counter Cumulative count of errors encountered while transmitting network <code>container_network_transmit_packets_dropped_total</code> Counter Cumulative count of packets dropped while transmitting network <code>container_network_transmit_packets_total</code> Counter Cumulative count of packets transmitted network <code>container_network_udp6_usage_total</code> Gauge udp6 connection usage statistic for container udp <code>container_network_udp_usage_total</code> Gauge udp connection usage statistic for container udp <code>container_oom_events_total</code> Counter Count of out of memory events observed for the container oom_event <code>container_perf_events_scaling_ratio</code> Gauge Scaling ratio for perf event counter (event can be identified by <code>event</code> label and <code>cpu</code> indicates the core for which event was measured). See perf event configuration. perf_event libpfm <code>container_perf_events_total</code> Counter Scaled counter of perf core event (event can be identified by <code>event</code> label and <code>cpu</code> indicates the core for which event was measured). See perf event configuration. perf_event libpfm <code>container_perf_uncore_events_scaling_ratio</code> Gauge Scaling ratio for perf uncore event counter (event can be identified by <code>event</code> label, <code>pmu</code> and <code>socket</code> lables indicate the PMU and the CPU socket for which event was measured). See perf event configuration. Metric exists only for main cgroup (id=\"/\"). perf_event libpfm <code>container_perf_uncore_events_total</code> Counter Scaled counter of perf uncore event (event can be identified by <code>event</code> label, <code>pmu</code> and <code>socket</code> lables indicate the PMU and the CPU socket for which event was measured). See perf event configuration). Metric exists only for main cgroup (id=\"/\"). perf_event libpfm <code>container_processes</code> Gauge Number of processes running inside the container process <code>container_referenced_bytes</code> Gauge Container referenced bytes during last measurements cycle based on Referenced field in /proc/smaps file, with /proc/PIDs/clear_refs set to 1 after defined number of cycles configured through <code>referenced_reset_interval</code> cAdvisor parameter.Warning: this is intrusive collection because can influence kernel page reclaim policy and add latency. Refer to https://github.com/brendangregg/wss#wsspl-referenced-page-flag for more details. bytes referenced_memory <code>container_sockets</code> Gauge Number of open sockets for the container process <code>container_spec_cpu_period</code> Gauge CPU period of the container - <code>container_spec_cpu_quota</code> Gauge CPU quota of the container - <code>container_spec_cpu_shares</code> Gauge CPU share of the container - <code>container_spec_memory_limit_bytes</code> Gauge Memory limit for the container bytes - <code>container_spec_memory_reservation_limit_bytes</code> Gauge Memory reservation limit for the container bytes <code>container_spec_memory_swap_limit_bytes</code> Gauge Memory swap limit for the container bytes <code>container_start_time_seconds</code> Gauge Start time of the container since unix epoch seconds <code>container_tasks_state</code> Gauge Number of tasks in given state (<code>sleeping</code>, <code>running</code>, <code>stopped</code>, <code>uninterruptible</code>, or <code>ioawaiting</code>) cpuLoad <code>container_threads</code> Gauge Number of threads running inside the container process <code>container_threads_max</code> Gauge Maximum number of threads allowed inside the container process <code>container_ulimits_soft</code> Gauge Soft ulimit values for the container root process. Unlimited if -1, except priority and nice process","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#hardware-metrics","title":"hardware metrics","text":"<p>The table below lists the Prometheus hardware metrics exposed by cAdvisor (in alphabetical order by metric name) and corresponding <code>-disable_metrics</code> / <code>-enable_metrics</code> option parameter:</p> Metric name Type Description Unit (where applicable) option parameter addional build flag <code>machine_cpu_cache_capacity_bytes</code> Gauge Cache size in bytes assigned to NUMA node and CPU core bytes cpu_topology <code>machine_cpu_cores</code> Gauge Number of logical CPU cores <code>machine_cpu_physical_cores</code> Gauge Number of physical CPU cores <code>machine_cpu_sockets</code> Gauge Number of CPU sockets <code>machine_dimm_capacity_bytes</code> Gauge Total RAM DIMM capacity (all types memory modules) value labeled by dimm type,information is retrieved from sysfs edac per-DIMM API (/sys/devices/system/edac/mc/) introduced in kernel 3.6 bytes <code>machine_dimm_count</code> Gauge Number of RAM DIMM (all types memory modules) value labeled by dimm type,information is retrieved from sysfs edac per-DIMM API (/sys/devices/system/edac/mc/) introduced in kernel 3.6 <code>machine_memory_bytes</code> Gauge Amount of memory installed on the machine bytes <code>machine_swap_bytes</code> Gauge Amount of swap memory available on the machine bytes <code>machine_node_distance</code> Gauge Distance between NUMA node and target NUMA node cpu_topology <code>machine_node_hugepages_count</code> Gauge Numer of hugepages assigned to NUMA node cpu_topology <code>machine_node_memory_capacity_bytes</code> Gauge Amount of memory assigned to NUMA node bytes cpu_topology <code>machine_nvm_avg_power_budget_watts</code> Gauge NVM power budget watts libipmctl <code>machine_nvm_capacity</code> Gauge NVM capacity value labeled by NVM mode (memory mode or app direct mode) bytes libipmctl <code>machine_thread_siblings_count</code> Gauge Number of CPU thread siblings cpu_topology","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#_2","title":"\u5e38\u7528\u89c4\u5219","text":"","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#podcpulimitrate","title":"PodCPULimitRate","text":"<p>pod cpu\u4f7f\u7528\u5360limit\u7684\u767e\u5206\u6bd4 <pre><code>sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"POD\"}[1m])) by (cluster, namespace, pod, container) / sum(kube_pod_container_resource_limits_cpu_cores&gt;0) by (cluster, namespace, pod, container) &gt; 0.6\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}/namespace {{ $labels.namespace }}/Pod {{ $labels.pod }}/container {{ $labels.container }}\u7684CPU\u4f7f\u7528\u7387(\u5360limit)\u8fbe{{ $value | humanizePercentage }}.</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#podcpurequestrate","title":"PodCPURequestRate","text":"<p>pod cpu\u4f7f\u7528\u5360request\u7684\u767e\u5206\u6bd4 <pre><code>sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\", image!=\"\", container!=\"POD\"}[1m])) by (cluster, namespace, pod, container) / sum(kube_pod_container_resource_requests_cpu_cores&gt;0) by (cluster, namespace, pod, container) &gt; 0.8\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}/namespace {{ $labels.namespace }}/Pod {{ $labels.pod }}/container {{ $labels.container }}\u7684CPU\u4f7f\u7528\u7387(\u5360request)\u8fbe{{ $value | humanizePercentage }}.</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#podmemorylimitrate","title":"PodMemoryLimitRate","text":"<p>pod \u5185\u5b58\u4f7f\u7528\u5360limit\u7684\u767e\u5206\u6bd4 <pre><code>sum(rate(container_memory_working_set_bytes{job=\"cadvisor\", image!=\"\", container!=\"POD\"}[1m])) by (cluster, namespace, pod, container) / sum(kube_pod_container_resource_limits_memory_bytes&gt;0) by (cluster, namespace, pod, container) &gt; 0.8\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}/namespace {{ $labels.namespace }}/Pod {{ $labels.pod }}/container {{ $labels.container }}\u7684\u5185\u5b58\u4f7f\u7528\u7387(\u5360limit)\u8fbe{{ $value | humanizePercentage }}.</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#podmemoryrequestrate","title":"PodMemoryRequestRate","text":"<p>pod \u5185\u5b58\u4f7f\u7528\u5360request\u7684\u767e\u5206\u6bd4 <pre><code>sum(rate(container_memory_working_set_bytes{job=\"cadvisor\", image!=\"\", container!=\"POD\"}[1m])) by (cluster, namespace, pod, container) / sum(kube_pod_container_resource_requests_memory_bytes&gt;0) by (cluster, namespace, pod, container) &gt; 0.8\n</code></pre> \u544a\u8b66\u5185\u5bb9</p> <p>\u96c6\u7fa4{{ $labels.cluster }}/namespace {{ $labels.namespace }}/Pod {{ $labels.pod }}/container{{ $labels.container }}\u7684\u5185\u5b58\u4f7f\u7528\u7387(\u5360request)\u8fbe{{ $value | humanizePercentage }}.</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/k8s-metrics/#_3","title":"\u53c2\u8003","text":"<p>kubenetes runbook: https://runbooks.prometheus-operator.dev/</p>","tags":["metrics","kube-state-metrics","cadvisor"]},{"location":"monitoring/prometheus/","title":"Prometheus","text":"","tags":["prometheus"]}]}